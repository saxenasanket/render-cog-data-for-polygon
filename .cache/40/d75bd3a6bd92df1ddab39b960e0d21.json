{"id":"Dgch","dependencies":[{"name":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/package.json","includedInParent":true,"mtime":1588919574011},{"name":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/package.json","includedInParent":true,"mtime":1588919548059},{"name":"./util","loc":{"line":1,"column":21},"parent":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/lib/field.js","resolved":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/lib/util.js"},{"name":"./serializers","loc":{"line":3,"column":28},"parent":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/lib/field.js","resolved":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/lib/serializers.js"},{"name":"./deserializers","loc":{"line":4,"column":30},"parent":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/lib/field.js","resolved":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/lib/deserializers.js"}],"generated":{"js":"const e=require(\"./util\"),i=require(\"./serializers\"),t=require(\"./deserializers\");exports.Field=function(r){if(\"object\"!==e.typeOf(r))this.default=r;else{if(!(\"default\"in r))throw new Error(\"Missing default\");this.default=r.default}const s=e.typeOf(this.default);this.serialize=r.serialize||i.get(s),this.deserialize=r.deserialize||t.get(s)};"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/hashed/lib/field.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/hashed/lib/field.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules/hashed/lib/field.js","original":{"line":1,"column":0},"generated":{"line":1,"column":8}},{"source":"node_modules/hashed/lib/field.js","original":{"line":1,"column":0},"generated":{"line":1,"column":16}},{"source":"node_modules/hashed/lib/field.js","original":{"line":3,"column":0},"generated":{"line":1,"column":26}},{"source":"node_modules/hashed/lib/field.js","original":{"line":3,"column":0},"generated":{"line":1,"column":28}},{"source":"node_modules/hashed/lib/field.js","original":{"line":3,"column":0},"generated":{"line":1,"column":36}},{"source":"node_modules/hashed/lib/field.js","original":{"line":4,"column":0},"generated":{"line":1,"column":53}},{"source":"node_modules/hashed/lib/field.js","original":{"line":4,"column":0},"generated":{"line":1,"column":55}},{"source":"node_modules/hashed/lib/field.js","original":{"line":4,"column":0},"generated":{"line":1,"column":63}},{"source":"node_modules/hashed/lib/field.js","original":{"line":15,"column":0},"generated":{"line":1,"column":82}},{"source":"node_modules/hashed/lib/field.js","original":{"line":15,"column":0},"generated":{"line":1,"column":90}},{"source":"node_modules/hashed/lib/field.js","original":{"line":15,"column":0},"generated":{"line":1,"column":96}},{"source":"node_modules/hashed/lib/field.js","original":{"line":15,"column":0},"generated":{"line":1,"column":105}},{"source":"node_modules/hashed/lib/field.js","original":{"line":16,"column":0},"generated":{"line":1,"column":108}},{"source":"node_modules/hashed/lib/field.js","original":{"line":16,"column":0},"generated":{"line":1,"column":111}},{"source":"node_modules/hashed/lib/field.js","original":{"line":16,"column":0},"generated":{"line":1,"column":122}},{"source":"node_modules/hashed/lib/field.js","original":{"line":16,"column":0},"generated":{"line":1,"column":124}},{"source":"node_modules/hashed/lib/field.js","original":{"line":16,"column":0},"generated":{"line":1,"column":131}},{"source":"node_modules/hashed/lib/field.js","original":{"line":17,"column":0},"generated":{"line":1,"column":134}},{"source":"node_modules/hashed/lib/field.js","original":{"line":17,"column":0},"generated":{"line":1,"column":139}},{"source":"node_modules/hashed/lib/field.js","original":{"line":17,"column":0},"generated":{"line":1,"column":147}},{"source":"node_modules/hashed/lib/field.js","original":{"line":18,"column":0},"generated":{"line":1,"column":153}},{"source":"node_modules/hashed/lib/field.js","original":{"line":18,"column":0},"generated":{"line":1,"column":154}},{"source":"node_modules/hashed/lib/field.js","original":{"line":18,"column":0},"generated":{"line":1,"column":159}},{"source":"node_modules/hashed/lib/field.js","original":{"line":18,"column":0},"generated":{"line":1,"column":171}},{"source":"node_modules/hashed/lib/field.js","original":{"line":19,"column":0},"generated":{"line":1,"column":174}},{"source":"node_modules/hashed/lib/field.js","original":{"line":19,"column":0},"generated":{"line":1,"column":180}},{"source":"node_modules/hashed/lib/field.js","original":{"line":19,"column":0},"generated":{"line":1,"column":184}},{"source":"node_modules/hashed/lib/field.js","original":{"line":19,"column":0},"generated":{"line":1,"column":190}},{"source":"node_modules/hashed/lib/field.js","original":{"line":21,"column":0},"generated":{"line":1,"column":209}},{"source":"node_modules/hashed/lib/field.js","original":{"line":21,"column":0},"generated":{"line":1,"column":214}},{"source":"node_modules/hashed/lib/field.js","original":{"line":21,"column":0},"generated":{"line":1,"column":222}},{"source":"node_modules/hashed/lib/field.js","original":{"line":21,"column":0},"generated":{"line":1,"column":224}},{"source":"node_modules/hashed/lib/field.js","original":{"line":24,"column":0},"generated":{"line":1,"column":232}},{"source":"node_modules/hashed/lib/field.js","original":{"line":24,"column":0},"generated":{"line":1,"column":238}},{"source":"node_modules/hashed/lib/field.js","original":{"line":24,"column":0},"generated":{"line":1,"column":240}},{"source":"node_modules/hashed/lib/field.js","original":{"line":24,"column":0},"generated":{"line":1,"column":242}},{"source":"node_modules/hashed/lib/field.js","original":{"line":24,"column":0},"generated":{"line":1,"column":249}},{"source":"node_modules/hashed/lib/field.js","original":{"line":24,"column":0},"generated":{"line":1,"column":254}},{"source":"node_modules/hashed/lib/field.js","original":{"line":25,"column":0},"generated":{"line":1,"column":263}},{"source":"node_modules/hashed/lib/field.js","original":{"line":25,"column":0},"generated":{"line":1,"column":268}},{"source":"node_modules/hashed/lib/field.js","original":{"line":25,"column":0},"generated":{"line":1,"column":278}},{"source":"node_modules/hashed/lib/field.js","original":{"line":25,"column":0},"generated":{"line":1,"column":280}},{"source":"node_modules/hashed/lib/field.js","original":{"line":25,"column":0},"generated":{"line":1,"column":291}},{"source":"node_modules/hashed/lib/field.js","original":{"line":25,"column":0},"generated":{"line":1,"column":293}},{"source":"node_modules/hashed/lib/field.js","original":{"line":25,"column":0},"generated":{"line":1,"column":297}},{"source":"node_modules/hashed/lib/field.js","original":{"line":26,"column":0},"generated":{"line":1,"column":300}},{"source":"node_modules/hashed/lib/field.js","original":{"line":26,"column":0},"generated":{"line":1,"column":305}},{"source":"node_modules/hashed/lib/field.js","original":{"line":26,"column":0},"generated":{"line":1,"column":317}},{"source":"node_modules/hashed/lib/field.js","original":{"line":26,"column":0},"generated":{"line":1,"column":319}},{"source":"node_modules/hashed/lib/field.js","original":{"line":26,"column":0},"generated":{"line":1,"column":332}},{"source":"node_modules/hashed/lib/field.js","original":{"line":26,"column":0},"generated":{"line":1,"column":334}},{"source":"node_modules/hashed/lib/field.js","original":{"line":26,"column":0},"generated":{"line":1,"column":338}}],"sources":{"node_modules/hashed/lib/field.js":"const util = require('./util');\n\nconst serializers = require('./serializers');\nconst deserializers = require('./deserializers');\n\n/**\n * Create a new field.  A field must have a default value (`default`) and is\n * capable of serializing and deserializing values.\n * @param {Object} config Field configuration.  Must have a `default` property\n *     with a default value.  May have optional `serialize` and `deserialize`\n *     functions.  As a shorthand for providing a config object with a `default`\n *     property, a default value may be provided directly.\n * @constructor\n */\nexports.Field = function(config) {\n  if (util.typeOf(config) !== 'object') {\n    this.default = config;\n  } else if (!('default' in config)) {\n    throw new Error('Missing default');\n  } else {\n    this.default = config.default;\n  }\n\n  const type = util.typeOf(this.default);\n  this.serialize = config.serialize || serializers.get(type);\n  this.deserialize = config.deserialize || deserializers.get(type);\n};\n"},"lineCount":null}},"error":null,"hash":"295eb6d14b1d998d102a43569ef7cbbc","cacheData":{"env":{}}}
{"id":"S4Ri","dependencies":[{"name":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/package.json","includedInParent":true,"mtime":1588919574011},{"name":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/package.json","includedInParent":true,"mtime":1588919548059},{"name":"./util","loc":{"line":1,"column":21},"parent":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/lib/hash.js","resolved":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/lib/util.js"}],"generated":{"js":"const e=require(\"./util\");function t(t){let i;if(t.length>2){i=t.substring(2).split(\"/\")}else i=[];return e.unzip(i)}function i(t){let i=\"#\";const n=e.zip(t);return n.length>0&&(i=\"#/\"+n.join(\"/\")),i}exports.deserialize=t,exports.serialize=i;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/hashed/lib/hash.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":1,"column":0},"generated":{"line":1,"column":8}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":1,"column":0},"generated":{"line":1,"column":16}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":8,"column":0},"generated":{"line":1,"column":26}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":8,"column":0},"generated":{"line":1,"column":35}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":8,"column":0},"generated":{"line":1,"column":37}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":9,"column":0},"generated":{"line":1,"column":40}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":9,"column":0},"generated":{"line":1,"column":44}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":10,"column":0},"generated":{"line":1,"column":46}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":10,"column":0},"generated":{"line":1,"column":49}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":10,"column":0},"generated":{"line":1,"column":51}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":10,"column":0},"generated":{"line":1,"column":58}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":10,"column":0},"generated":{"line":1,"column":60}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":12,"column":0},"generated":{"line":1,"column":61}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":11,"column":0},"generated":{"line":1,"column":63}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":11,"column":0},"generated":{"line":1,"column":65}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":11,"column":0},"generated":{"line":1,"column":75}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":12,"column":0},"generated":{"line":1,"column":78}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":12,"column":0},"generated":{"line":1,"column":84}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":14,"column":0},"generated":{"line":1,"column":94}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":14,"column":0},"generated":{"line":1,"column":96}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":16,"column":0},"generated":{"line":1,"column":99}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":16,"column":0},"generated":{"line":1,"column":106}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":16,"column":0},"generated":{"line":1,"column":108}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":16,"column":0},"generated":{"line":1,"column":114}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":24,"column":0},"generated":{"line":1,"column":117}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":24,"column":0},"generated":{"line":1,"column":126}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":24,"column":0},"generated":{"line":1,"column":128}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":25,"column":0},"generated":{"line":1,"column":131}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":25,"column":0},"generated":{"line":1,"column":135}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":25,"column":0},"generated":{"line":1,"column":137}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":26,"column":0},"generated":{"line":1,"column":141}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":26,"column":0},"generated":{"line":1,"column":147}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":26,"column":0},"generated":{"line":1,"column":149}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":26,"column":0},"generated":{"line":1,"column":151}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":26,"column":0},"generated":{"line":1,"column":155}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":30,"column":0},"generated":{"line":1,"column":158}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":27,"column":0},"generated":{"line":1,"column":165}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":27,"column":0},"generated":{"line":1,"column":167}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":27,"column":0},"generated":{"line":1,"column":174}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":28,"column":0},"generated":{"line":1,"column":178}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":28,"column":0},"generated":{"line":1,"column":180}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":28,"column":0},"generated":{"line":1,"column":185}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":28,"column":0},"generated":{"line":1,"column":187}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":28,"column":0},"generated":{"line":1,"column":192}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":30,"column":0},"generated":{"line":1,"column":198}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":33,"column":0},"generated":{"line":1,"column":200}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":33,"column":0},"generated":{"line":1,"column":208}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":33,"column":0},"generated":{"line":1,"column":220}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":34,"column":0},"generated":{"line":1,"column":222}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":34,"column":0},"generated":{"line":1,"column":230}},{"source":"node_modules/hashed/lib/hash.js","original":{"line":34,"column":0},"generated":{"line":1,"column":240}}],"sources":{"node_modules/hashed/lib/hash.js":"const util = require('./util');\n\n/**\n * Get values from a hash string.\n * @param {string} hash The hash string (e.g. '#/foo/bar').\n * @return {Object} The string values (e.g. {foo: 'bar'}).\n */\nfunction deserialize(hash) {\n  let zipped;\n  if (hash.length > 2) {\n    const path = hash.substring(2);\n    zipped = path.split('/');\n  } else {\n    zipped = [];\n  }\n  return util.unzip(zipped);\n}\n\n/**\n * Serialize values for the hash.\n * @param {Object} values The values to serialize.\n * @return {string} The hash string.\n */\nfunction serialize(values) {\n  let path = '#';\n  const parts = util.zip(values);\n  if (parts.length > 0) {\n    path = '#/' + parts.join('/');\n  }\n  return path;\n}\n\nexports.deserialize = deserialize;\nexports.serialize = serialize;\n"},"lineCount":null}},"error":null,"hash":"d42ed36e9eeb1a04042096420247253c","cacheData":{"env":{}}}
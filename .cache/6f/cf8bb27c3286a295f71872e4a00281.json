{"id":"node_modules/hashed/lib/index.js","dependencies":[{"name":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/package.json","includedInParent":true,"mtime":1588919574011},{"name":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/package.json","includedInParent":true,"mtime":1588919548059},{"name":"./store","loc":{"line":1,"column":22},"parent":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/lib/index.js","resolved":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/lib/store.js"},{"name":"./hash","loc":{"line":2,"column":21},"parent":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/lib/index.js","resolved":"/Users/sanketsaxena/Desktop/pixxel/intact/ol-ext-parcel-bundler/node_modules/hashed/lib/hash.js"}],"generated":{"js":"const Store = require('./store').Store;\nconst hash = require('./hash');\n\nlet store;\n\nfunction reset() {\n  if (store) {\n    window.removeEventListener('popstate', update);\n  }\n  window.addEventListener('popstate', update);\n  store = new Store(hash.deserialize(location.hash), function(\n    values,\n    defaults\n  ) {\n    const nonDefaults = {};\n    for (const key in values) {\n      if (values[key] !== defaults[key]) {\n        nonDefaults[key] = values[key];\n      }\n    }\n    history.pushState(values, '', hash.serialize(nonDefaults));\n  });\n}\n\nfunction update() {\n  store.update(hash.deserialize(location.hash));\n}\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called immediately with initial state.\n * @return {function(Object)} Call this function with any updates to the state.\n */\nexports.register = function(config, callback) {\n  return store.register(config, callback);\n};\n\n/**\n * Unregister an existing state provider.\n * @param {function(Object)} callback Callback registered by the provider.\n */\nexports.unregister = function(callback) {\n  store.unregister(callback);\n};\n\n/**\n * Serialize values as they would be represented in the hash.\n * @param {Object} values An object with values to be serialized.\n * @return {string} The values as they would be represented in the hash.\n */\nexports.serialize = function(values) {\n  return hash.serialize(store.serialize(values));\n};\n\nexports.reset = reset;\n\nreset();\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/hashed/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/hashed/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}}],"sources":{"node_modules/hashed/lib/index.js":"const Store = require('./store').Store;\nconst hash = require('./hash');\n\nlet store;\n\nfunction reset() {\n  if (store) {\n    window.removeEventListener('popstate', update);\n  }\n  window.addEventListener('popstate', update);\n  store = new Store(hash.deserialize(location.hash), function(\n    values,\n    defaults\n  ) {\n    const nonDefaults = {};\n    for (const key in values) {\n      if (values[key] !== defaults[key]) {\n        nonDefaults[key] = values[key];\n      }\n    }\n    history.pushState(values, '', hash.serialize(nonDefaults));\n  });\n}\n\nfunction update() {\n  store.update(hash.deserialize(location.hash));\n}\n\n/**\n * Register a new state provider.\n * @param {Object} config Schema config.\n * @param {function(Object)} callback Called immediately with initial state.\n * @return {function(Object)} Call this function with any updates to the state.\n */\nexports.register = function(config, callback) {\n  return store.register(config, callback);\n};\n\n/**\n * Unregister an existing state provider.\n * @param {function(Object)} callback Callback registered by the provider.\n */\nexports.unregister = function(callback) {\n  store.unregister(callback);\n};\n\n/**\n * Serialize values as they would be represented in the hash.\n * @param {Object} values An object with values to be serialized.\n * @return {string} The values as they would be represented in the hash.\n */\nexports.serialize = function(values) {\n  return hash.serialize(store.serialize(values));\n};\n\nexports.reset = reset;\n\nreset();\n"},"lineCount":59}},"error":null,"hash":"48d3ead5946d6d4584127e5716c1eb2a","cacheData":{"env":{}}}